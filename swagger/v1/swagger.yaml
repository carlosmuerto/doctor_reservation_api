---
openapi: 3.0.1
info:
  title: DOCTOR RESERVATION API
components:
  securitySchemes:
    bearer_auth:
      type: http
      scheme: bearer
  schemas:
    User:
      type: object
      properties:
        id:
          type: integer
          example: 2
        name:
          type: string
          example: Scott Wells
        email:
          type: string
          example: scott_wells@test.com
        role:
          type: string
          example: user
    Doctor:
      type: object
      properties:
        id:
          type: integer
          example: 2
        name:
          type: string
          example: Scott doctor
        specialization:
          type: string
          example: specialization
        photo_dir:
          type: string
          example: asset/photo.jpg
        user_id:
          type: integer
          example: 2
    Appointment:
      type: object
      properties:
        id:
          type: integer
          example: 2
        doctor_id:
          type: integer
          example: 2
        description:
          type: string
          example: Scott Wells
        datetime_of_appointment:
          type: string
          example: '2023-01-21T22:37:47.895Z'
        created_at:
          type: string
          example: '2023-01-11T22:37:47.904Z'
    status:
      type: object
      properties:
        code:
          type: integer
          example: 200
        message:
          type: string
          example: Signed up sucessfully.
    ErrorResponses:
      type: object
      properties:
        type: array
        items:
          type: string
          example: error message.
paths:
  "/appointments":
    get:
      summary: Get appointments List
      security:
      - bearer_auth: []
      responses:
        '401':
          description: Unauthorized
        '200':
          description: OK
          content:
            application/json:
              schema:
                type: array
                items:
                  "$ref": "#/components/schemas/Appointment"
    post:
      summary: Create a Appointments
      security:
      - bearer_auth: []
      parameters: []
      responses:
        '401':
          description: Unauthorized
        '422':
          description: Unprocessable Entity
        '201':
          description: Created
          content:
            application/json:
              schema:
                "$ref": "#/components/schemas/Appointment"
      requestBody:
        content:
          application/json:
            schema:
              type: object
              properties:
                doctor_id:
                  type: integer
                  example: 2
                description:
                  type: string
                  example: Scott Wells
                datetime_of_appointment:
                  type: string
                  example: '2023-01-21T22:37:47.895Z'
              required:
              - doctor_id
              - description
              - datetime_of_appointment
  "/appointments/{id}":
    get:
      summary: get a appointment
      security:
      - bearer_auth: []
      parameters:
      - name: id
        in: path
        required: true
        schema:
          type: integer
      responses:
        '401':
          description: Unauthorized
        '200':
          description: OK
          content:
            application/json:
              schema:
                "$ref": "#/components/schemas/Appointment"
    delete:
      summary: delete a Appointment
      security:
      - bearer_auth: []
      parameters:
      - name: id
        in: path
        required: true
        schema:
          type: integer
      responses:
        '401':
          description: Unauthorized
        '204':
          description: No Content
  "/doctors":
    get:
      summary: Get Doctors List
      security:
      - bearer_auth: []
      responses:
        '401':
          description: Unauthorized
        '200':
          description: OK
          content:
            application/json:
              schema:
                type: array
                items:
                  "$ref": "#/components/schemas/Doctor"
    post:
      summary: Create a Doctor
      security:
      - bearer_auth: []
      parameters: []
      responses:
        '401':
          description: Unauthorized
        '422':
          description: Unprocessable Entity
        '201':
          description: Created
      requestBody:
        content:
          application/json:
            schema:
              type: object
              properties:
                name:
                  type: string
                  example: Scott doctor
                specialization:
                  type: string
                  example: specialization
              required:
              - name
              - specialization
  "/doctors/{id}":
    get:
      summary: get a doctor
      security:
      - bearer_auth: []
      parameters:
      - name: id
        in: path
        required: true
        schema:
          type: integer
      responses:
        '401':
          description: Unauthorized
        '200':
          description: OK
          content:
            application/json:
              schema:
                "$ref": "#/components/schemas/Doctor"
    delete:
      summary: delete a Doctor
      security:
      - bearer_auth: []
      parameters:
      - name: id
        in: path
        required: true
        schema:
          type: integer
      responses:
        '401':
          description: Unauthorized
        '204':
          description: No Content
  "/signup":
    post:
      summary: signup
      parameters: []
      responses:
        '200':
          description: OK
          headers:
            Authorization:
              schema:
                type: string
              description: bearer token
          content:
            application/json:
              schema:
                type: object
                properties:
                  status:
                    "$ref": "#/components/schemas/status"
                  data: {}
      requestBody:
        content:
          application/json:
            schema:
              type: object
              properties:
                user:
                  type: object
                  properties:
                    name:
                      type: string
                      example: Swagger
                    email:
                      type: string
                      example: swagger@rswag.com
                    password:
                      type: string
                      example: swagger123
              required:
              - email
              - password
              - name
  "/login":
    post:
      summary: login
      parameters: []
      responses:
        '200':
          description: OK
          headers:
            Authorization:
              schema:
                type: string
              description: bearer token
          content:
            application/json:
              schema:
                type: object
                properties:
                  status:
                    "$ref": "#/components/schemas/status"
        '401':
          description: Invalid Email or password.
          content:
            application/json:
              schema:
                type: object
                properties:
                  error:
                    type: string
                    example: Invalid Email or password.
      requestBody:
        content:
          application/json:
            schema:
              type: object
              properties:
                user:
                  type: object
                  properties:
                    email:
                      type: string
                      example: swagger@rswag.com
                    password:
                      type: string
                      example: swagger123
              required:
              - email
              - password
  "/logout":
    delete:
      summary: logout
      security:
      - bearer_auth: []
      responses:
        '401':
          description: Unauthorized
        '200':
          description: OK
          content:
            application/json:
              schema:
                "$ref": "#/components/schemas/status"
  "/users/current":
    get:
      summary: Current user
      security:
      - bearer_auth: []
      responses:
        '401':
          description: Unauthorized
        '200':
          description: OK
          content:
            application/json:
              schema:
                "$ref": "#/components/schemas/User"
